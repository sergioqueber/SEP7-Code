@page "/login"
@using Dto;
@using AppInterfaces
@inject AppInterfaces.IAuthService AuthService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<div class="login-container">
    <!-- Branding Section -->
    <div class="branding">
        <h1 class="branding-title">Actimatic</h1>
        <p class="branding-subtitle">Get rewards by making the world a better place</p>
    </div>

    <!-- Login Form -->
    <AuthorizeView>
        <NotAuthorized>
            <div class="login-form-container">
                <div class="login-card">
                    <h3 class="login-title">Log In</h3>
                    <div class="form-group">
                        <label for="id">Id:</label>
                        <input type="id" id="id" @bind="loginModel.Id" class="form-input" placeholder="Enter your ID" />
                    </div>
                    <div class="form-group">
                        <label for="password">Password:</label>
                        <input type="password" id="password" @bind="loginModel.Password" class="form-input" />
                    </div>
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="error-message">
                            @errorMessage
                        </div>
                    }
                    <div class="button-group">
                        <button class="btn btn-primary" @onclick="HandleLogin">Log In</button>
                        <button class="btn btn-link">Forgot password?</button>
                        <button class="btn btn-secondary" @onclick="Register">Create new account</button>
                    </div>
                </div>
            </div>
        </NotAuthorized>
        <Authorized>
            <p>You are already logged in</p>
            <button @onclick="Logout" class="btn btn-primary">
                Log out
            </button>
        </Authorized>
    </AuthorizeView>
</div>

@code {
    private UserLogInDTO loginModel = new UserLogInDTO();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            await AuthService.LoginAsync(loginModel.Id, loginModel.Password);
            Console.WriteLine("Logged in");
            Navigation.NavigateTo("/");
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    private async Task Register()
    {
        Navigation.NavigateTo($"/register");
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/login");
    }
}
<style>
    .login-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background-color: #f8f9fa;
        font-family: Arial, sans-serif;
    }

    .branding {
        text-align: center;
        margin-bottom: 2rem;
    }

    .branding-title {
        font-size: 2rem;
        font-weight: bold;
        color: #4c75f2;
    }

    .branding-subtitle {
        font-size: 1rem;
        color: #6c757d;
    }

    .login-form-container {
        display: flex;
        justify-content: center;
        width: 100%;
    }

    .login-card {
        background: #fff;
        padding: 2rem;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 400px;
        text-align: center;
    }

    .login-title {
        margin-bottom: 1.5rem;
        color: #333;
    }

    .form-group {
        margin-bottom: 1rem;
        text-align: left;
    }

    .form-group label {
        display: block;
        margin-bottom: 0.5rem;
        color: #333;
    }

    .form-input {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 1rem;
    }

    .form-input:focus {
        outline: none;
        border-color: #4c75f2;
    }

    .error-message {
        color: #dc3545;
        margin-bottom: 1rem;
    }

    .button-group {
        margin-top: 1.5rem;
    }

    .btn {
        display: block;
        width: 100%;
        padding: 0.75rem;
        font-size: 1rem;
        border-radius: 4px;
        text-align: center;
        margin-bottom: 1rem;
        cursor: pointer;
    }

    .btn-primary {
        background-color: #4c75f2;
        color: #fff;
        border: none;
    }

    .btn-primary:hover {
        background-color: #3a5db3;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: #fff;
        border: none;
    }

    .btn-link {
        background: none;
        border: none;
        color: #4c75f2;
        text-decoration: underline;
        cursor: pointer;
        padding: 0;
        font-size: 1rem;
    }

    .btn:hover {
        opacity: 0.9;
    }
</style>