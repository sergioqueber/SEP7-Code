@page "/login"
@using Dto;
@using AppInterfaces
@inject IAuthService AuthService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h3>Login</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

@* <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <input type="hidden" name="FormName" value="LoginForm" />
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="userId">User Id</label>
        <InputText id="userId" class="form-control" @bind-Value="loginModel.Id" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm> *@
<div class="login-container">
        <!-- Branding Section -->
        <div class="branding text-center text-md-start">
            <h1 class="fw-bold text-primary">Actimatic</h1>
            <p class="text-muted">Get rewards by making the world a better place</p>
        </div>

        <!-- Login Form -->
        <div class="login-card">
            <form>
                <div class="mb-3">
                    <label for="id" class="form-label">Id</label>
                    <input type="id" class="form-control" id="id" placeholder="Enter your id" @bind="loginModel.Id">
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Password</label>
                    <input type="password" class="form-control" id="password" placeholder="Enter your password" @bind="loginModel.Password">
                </div>
                <button type="submit" class="btn btn-primary">Log In</button>
                <div class="text-center mt-2">
                    <a href="#" class="btn btn-link">Forgot password?</a>
                </div>
                <button type="button" class="btn btn-success">Create new account</button>
            </form>
        </div>
    </div>

@code {
    private UserLogInDTO loginModel = new UserLogInDTO();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            await AuthService.LoginAsync(loginModel.Id, loginModel.Password);
            Navigation.NavigateTo("/");
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
    private async Task Register(){
        Navigation.NavigateTo($"/register");
    }
}