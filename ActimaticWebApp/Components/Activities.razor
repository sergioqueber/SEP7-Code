@page "/activities"
@using Interfaces
@using AppServices
@using Model
@inject ActivitiesService ActivitiesService
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@inject AuthenticationStateProvider AuthStateProvider
@attribute [Authorize]

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-12 col-md-12 col-lg-10">
            @if (isLoading)
            {
                <div class="text-center">
                    <p>Loading...</p>
                </div>
            }
            else
            {
                <div class="card shadow">
                    <div class="card-header bg-primary text-white text-center">
                        @if (amount == "max")
                        {
                            <h3 class="mb-0">All Activities</h3>
                        }
                        else
                        {
                            <h3 class="mb-0">Latest Activities</h3>
                        }
                    </div>
                    <div class="card-body">
                        @if (transports.Where(t => t.UserId == userId).Any())
                        {
                        <h4>Transport</h4>
                        }
                        @if (transports.Where(t => t.UserId == userId).Any() && amount == "max")
                        {
                            <div class="row g-4 mb-2" >
                                @foreach (var transport in transports.Where(t => t.UserId == userId).OrderByDescending(t => t.Id))
                                {   
                                    <div class="col-md-4">
                                        <div class="card h-100 shadow-sm">
                                            <div class="card-body">
                                                <h5 class="card-title">
                                                    @if (transport.Name != null)
                                                    {
                                                        @($"{transport.Type}: {transport.Name}")
                                                    }
                                                    else
                                                    {
                                                        @transport.Type
                                                    }
                                                </h5>
                                                <dl class="mb-0">
                                                    <dd>Distance: @transport.Distance</dd>
                                                    <dd>Points: @transport.AwardedPoints</dd>
                                                    <dd>Emissions saved: @transport.EmissionsSaved g CO2</dd>
                                                    <dd>Date: @transport.Date.ToString("dd/MM/yyyy")</dd>
                                                </dl>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else if (transports.Where(t => t.UserId == userId).Any() && amount == "few")
                        {
                            <ul>
                                @foreach (var transport in transports.Where(t => t.UserId == userId).OrderByDescending(t => t.Id).Take(1))
                                {
                                    <li>
                                    @if (transport.Name != null)
                                    {
                                        <li>@transport.Name: @transport.Type (@transport.AwardedPoints points)</li>
                                    }
                                    else
                                    {
                                        <li>@transport.Type (@transport.AwardedPoints points)</li>
                                    }
                                    </li>
                                }
                            </ul>
                        }
                        @if (stairs.Where(t => t.UserId == userId).Any()){
                        <h4>Stairs</h4>
                        }
                        @if (stairs.Where(t => t.UserId == userId).Any() && amount == "max")
                        {
                            <div class="row g-4 mb-2" >
                                @foreach (var stair in stairs.Where(t => t.UserId == userId).OrderByDescending(t => t.Id))
                                {
                                    <div class="col-md-4">
                                        <div class="card h-100 shadow-sm">
                                            <div class="card-body">
                                                <h5 class="card-title">
                                                    @if (stair.Name != null)
                                                    {
                                                        @($"Stairs: {stair.Name}")
                                                    }
                                                    else
                                                    {
                                                        @("Stairs")
                                                    }
                                                </h5>
                                                <dl class="mb-0">
                                                    <dd>Floors: @stair.Floors</dd>
                                                    <dd>Points: @stair.AwardedPoints</dd>
                                                    <dd>Date: @stair.Date.ToString("dd/MM/yyyy")</dd>
                                                </dl>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else if (stairs.Where(t => t.UserId == userId).Any() && amount == "few")
                        {
                            <ul>
                                @foreach (var stair in stairs.Where(t => t.UserId == userId).OrderByDescending(t => t.Id).Take(1))
                                {
                                    <li>
                                     @if (stair.Name != null)
                                    {
                                        <li>@stair.Name: @stair.Floors Floors Climbed (@stair.AwardedPoints points)</li>
                                    }
                                    else
                                    {
                                        <li>@stair.Floors Floors climbed (@stair.AwardedPoints points)</li>
                                    }
                                    </li>
                                }
                            </ul>
                        }
                        @if (volunteerings.Where(t => t.UserId == userId).Any()){
                        <h4>Volunteering</h4>
                        }
                        @if (volunteerings.Where(t => t.UserId == userId).Any() && amount == "max")
                        {
                            <div class="row g-4 mb-2" >
                                @foreach (var volunteering in volunteerings.Where(t => t.UserId == userId).OrderByDescending(t => t.Id))
                                {
                                    <div class="col-md-4">
                                        <div class="card h-100 shadow-sm">
                                            <div class="card-body">
                                                <h5 class="card-title">
                                                    @if (volunteering.Name != null)
                                                    {
                                                        @($"{volunteering.Location}: {volunteering.Name}")
                                                    }
                                                    else
                                                    {
                                                        @volunteering.Location
                                                    }
                                                </h5>
                                                <dl class="mb-0">
                                                    <dd>Hours: @volunteering.Hours</dd>
                                                    <dd>Points: @volunteering.AwardedPoints</dd>
                                                    <dd>Date: @volunteering.Date.ToString("dd/MM/yyyy")</dd>
                                                </dl>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else if (volunteerings.Where(t => t.UserId == userId).Any() && amount == "few")
                        {
                            <ul>
                                @foreach (var volunteering in volunteerings.Where(t => t.UserId == userId).OrderByDescending(t => t.Id).Take(1))
                                {
                                    <li>
                                    @if (volunteering.Name != null)
                                    {
                                        <li>@volunteering.Name: @volunteering.Location (@volunteering.AwardedPoints points)</li>
                                    }
                                    else
                                    {
                                        <li>Volunteering at @volunteering.Location (@volunteering.AwardedPoints points)</li>
                                    }
                                    </li>
                                }
                            </ul>
                        }
                        @if (savingFoods.Where(t => t.UserId == userId).Any()){

                        <h4>Saving Food</h4>
                        }
                        @if (savingFoods.Where(t => t.UserId == userId).Any() && amount == "max")
                        {
                            <div class="row g-4 mb-2" >
                                @foreach (var savingFood in savingFoods.Where(t => t.UserId == userId).OrderByDescending(t => t.Id))
                                {
                                    <div class="col-md-4">
                                        <div class="card h-100 shadow-sm">
                                            <div class="card-body">
                                                <h5 class="card-title">
                                                    @if (savingFood.Name != null)
                                                    {
                                                        @($"Food Saved: {savingFood.Name}")
                                                    }
                                                    else
                                                    {
                                                        @("Food Saved")
                                                    }
                                                </h5>
                                                <dl class="mb-0">
                                                    <dd>Packages: @savingFood.PackagesSaved</dd>
                                                    <dd>Points: @savingFood.AwardedPoints</dd>
                                                    <dd>Date: @savingFood.Date.ToString("dd/MM/yyyy")</dd>
                                                </dl>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else if (savingFoods.Where(t => t.UserId == userId).Any() && amount == "few")
                        {
                            <ul>
                                @foreach (var savingFood in savingFoods.Where(t => t.UserId == userId).OrderByDescending(t => t.Id).Take(1))
                                {
                                    <li>
                                    @if (savingFood.Name != null)
                                    {
                                        <li>@savingFood.Name: @savingFood.PackagesSaved Packages saved (@savingFood.AwardedPoints points)</li>
                                    }
                                    else
                                    {
                                        <li>@savingFood.PackagesSaved Packages saved (@savingFood.AwardedPoints points)</li>
                                    }
                                    </li>
                                }
                            </ul>
                        }
                        @if (carPools.Where(t => t.UserId == userId).Any()){
                        <h4>Car Pool</h4>
                        }
                        @if (carPools.Where(t => t.UserId == userId).Any() && amount == "max")
                        {
                            <div class="row g-4 mb-2" >
                                @foreach (var carPool in carPools.Where(t => t.UserId == userId).OrderByDescending(t => t.Id))
                                {
                                    <div class="col-md-4">
                                        <div class="card h-100 shadow-sm">
                                            <div class="card-body">
                                                <h5 class="card-title">
                                                    @if (carPool.Name != null)
                                                    {
                                                        @($"{carPool.CarType}: {carPool.Name}")
                                                    }
                                                    else
                                                    {
                                                        @carPool.CarType
                                                    }
                                                </h5>
                                                <dl class="mb-0">
                                                    <dd>Distance: @carPool.Distance</dd>
                                                    <dd>Seats: @carPool.FilledSeats/@(carPool.EmptySeats + carPool.FilledSeats)</dd>
                                                    <dd>Points: @carPool.AwardedPoints</dd>
                                                    <dd>Date: @carPool.Date.ToString("dd/MM/yyyy")</dd>
                                                </dl>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else if (carPools.Where(t => t.UserId == userId).Any() && amount == "few")
                        {
                            <ul>
                                @foreach (var carPool in carPools.Where(t => t.UserId == userId).OrderByDescending(t => t.Id).Take(1))
                                {
                                    <li>
                                    @if (carPool.Name != null)
                                    {
                                        <li>@carPool.Name: In a @carPool.CarType Car (@carPool.AwardedPoints points)</li>
                                    }
                                    else
                                    {
                                        <li>In a @carPool.CarType Car (@carPool.AwardedPoints points)</li>
                                    }
                                    </li>
                                }
                            </ul>
                        }
                        
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private IEnumerable<Transport> transports = new List<Transport>();
    private IEnumerable<Stairs> stairs = new List<Stairs>();
    private IEnumerable<Volunteering> volunteerings = new List<Volunteering>();
    private IEnumerable<SavingFood> savingFoods = new List<SavingFood>();
    private IEnumerable<CarPool> carPools = new List<CarPool>();
    private bool isLoading = true;
    [Parameter] public string amount { get; set; } = "max";
    [Parameter] public int userId { get; set; }

    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        try 
        {
            await LoadActivities();
            isLoading = false;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading activities: {ex.Message}");
        }
    }
    private async Task LoadActivities()
    {
        transports = await ActivitiesService.GetAllTransport();
        stairs = await ActivitiesService.GetAllStairsAsync();
        volunteerings = await ActivitiesService.GetAllVolunteeringAsync();
        savingFoods = await ActivitiesService.GetAllSavingFoodAsync();
        carPools = await ActivitiesService.GetAllCarPool();
    }
}